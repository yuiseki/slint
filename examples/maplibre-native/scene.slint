// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { Slider, Button, VerticalBox, HorizontalBox } from "std-widgets.slint";

export component MapLibreDemo inherits Window {
    title: "MapLibre Native + Slint Demo";
    width: 800px;
    height: 600px;
    
    callback request-redraw();
    callback pan-map(length, length);
    callback zoom-changed(float);
    callback reset-view();
    
    in property <image> rendered-map;
    in-out property <float> zoom-level: 10.0;
    in-out property <float> latitude: 35.6762;
    in-out property <float> longitude: 139.6503;
    
    VerticalBox {
        map-container := Rectangle {
            background: #f0f0f0;
            border-width: 1px;
            border-color: #ccc;
            
            map-image := Image {
                source: rendered-map;
                width: 100%;
                height: 100%;
                image-fit: fill;
                
                // Handle mouse interactions for panning
                touch := TouchArea {
                    moved => {
                        root.pan-map(self.pressed-x - self.mouse-x, self.pressed-y - self.mouse-y);
                    }
                    
                    scroll-event(event) => {
                        if (event.delta-y < 0) {
                            root.zoom-level = min(20.0, root.zoom-level + 0.5);
                        } else if (event.delta-y > 0) {
                            root.zoom-level = max(1.0, root.zoom-level - 0.5);
                        }
                        root.zoom-changed(root.zoom-level);
                        return accept;
                    }
                }
            }
        }
        
        // Control panel
        control-panel := Rectangle {
            height: 120px;
            background: #ffffff;
            border-width: 1px;
            border-color: #ccc;
            
            VerticalBox {
                padding: 10px;
                spacing: 8px;
                
                HorizontalBox {
                    spacing: 10px;
                    
                    Text {
                        text: "Zoom:";
                        vertical-alignment: center;
                        width: 60px;
                    }
                    
                    zoom-slider := Slider {
                        minimum: 1.0;
                        maximum: 20.0;
                        value <=> root.zoom-level;
                        
                        changed(value) => {
                            root.zoom-changed(value);
                        }
                    }
                    
                    Text {
                        text: Math.round(root.zoom-level * 10) / 10;
                        width: 40px;
                        horizontal-alignment: right;
                        vertical-alignment: center;
                    }
                }
                
                HorizontalBox {
                    spacing: 10px;
                    
                    Text {
                        text: "Location:";
                        vertical-alignment: center;
                        width: 60px;
                    }
                    
                    Text {
                        text: "Lat: " + Math.round(root.latitude * 1000) / 1000 + 
                              " Lng: " + Math.round(root.longitude * 1000) / 1000;
                        vertical-alignment: center;
                    }
                    
                    Rectangle {
                        // Spacer
                    }
                    
                    Button {
                        text: "Reset View";
                        clicked => {
                            root.reset-view();
                        }
                    }
                    
                    Button {
                        text: "Redraw";
                        clicked => {
                            root.request-redraw();
                        }
                    }
                }
            }
        }
    }
}